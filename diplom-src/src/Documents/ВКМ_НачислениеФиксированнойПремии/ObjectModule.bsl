
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	ПериодРегистрации = НачалоМесяца(ПериодРегистрации);
КонецПроцедуры  


Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Движения.ВКМ_ДополнительныеНачисления.Записывать = Истина;
	Движения.ВКМ_Удержания.Записывать = Истина; 
	
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВКМ_НачислениеФиксированнойПремииСписокСотрудников.Ссылка КАК Ссылка,
		|	ВКМ_НачислениеФиксированнойПремииСписокСотрудников.НомерСтроки КАК НомерСтроки,
		|	ВКМ_НачислениеФиксированнойПремииСписокСотрудников.Сотрудник КАК Сотрудник,
		|	ЕСТЬNULL(ВКМ_НачислениеФиксированнойПремииСписокСотрудников.СуммаПремии, 0) КАК Сумма
		|ИЗ
		|	Документ.ВКМ_НачислениеФиксированнойПремии.СписокСотрудников КАК ВКМ_НачислениеФиксированнойПремииСписокСотрудников
		|ГДЕ
		|	ВКМ_НачислениеФиксированнойПремииСписокСотрудников.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	ТЗ = РезультатЗапроса.Выгрузить();
	
	Если Не РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			Движение = Движения.ВКМ_ДополнительныеНачисления.Добавить();
			ЗаполнитьЗначенияСвойств(Движение, Выборка);
			Движение.ВидРасчета = ПланыВидовРасчета.ВКМ_ДополнительныеНачисления.Премия;
			Движение.ПериодРегистрации = ПериодРегистрации;
			Движение = Движения.ВКМ_Удержания.Добавить();
			ЗаполнитьЗначенияСвойств(Движение, Выборка);
			Движение.ВидРасчета = ПланыВидовРасчета.ВКМ_Удержания.НДФЛ;
			Движение.ПериодРегистрации = ПериодРегистрации;
		КонецЦикла;
	КонецЕсли;   
	
	Движения.Записать();
	
	ВКМ_РасчетЗП.РассчитатьПремию(Ссылка); 
	
	//Формируем движения по регистру Накопления ВзаиморасчетыССотрудниками  
	
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записывать = Истина; 
	
		//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВКМ_ДополнительныеНачисления.Сотрудник КАК Сотрудник,
		|	СУММА(ВКМ_ДополнительныеНачисления.Результат) КАК СуммаДополнительныхНачислений
		|ПОМЕСТИТЬ ВТ_ДополнительныеНачисления
		|ИЗ
		|	РегистрРасчета.ВКМ_ДополнительныеНачисления КАК ВКМ_ДополнительныеНачисления
		|ГДЕ
		|	ВКМ_ДополнительныеНачисления.ПериодРегистрации = &ПериодРегистрации
		|	И ВКМ_ДополнительныеНачисления.Регистратор = &Регистратор
		|
		|СГРУППИРОВАТЬ ПО
		|	ВКМ_ДополнительныеНачисления.Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВКМ_Удержания.Сотрудник КАК Сотрудник,
		|	СУММА(ВКМ_Удержания.Результат) КАК СуммаУдержаний
		|ПОМЕСТИТЬ ВТ_Удержания
		|ИЗ
		|	РегистрРасчета.ВКМ_Удержания КАК ВКМ_Удержания
		|ГДЕ
		|	ВКМ_Удержания.ПериодРегистрации = &ПериодРегистрации
		|	И ВКМ_Удержания.Регистратор = &Регистратор
		|
		|СГРУППИРОВАТЬ ПО
		|	ВКМ_Удержания.Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(ВТ_ДополнительныеНачисления.Сотрудник, ВТ_Удержания.Сотрудник) КАК Сотрудник,
		|	ЕСТЬNULL(ВТ_ДополнительныеНачисления.СуммаДополнительныхНачислений, 0) - ЕСТЬNULL(ВТ_Удержания.СуммаУдержаний, 0) КАК Сумма
		|ИЗ
		|	ВТ_ДополнительныеНачисления КАК ВТ_ДополнительныеНачисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Удержания КАК ВТ_Удержания
		|		ПО ВТ_ДополнительныеНачисления.Сотрудник = ВТ_Удержания.Сотрудник";
	
	Запрос.УстановитьПараметр("ПериодРегистрации", ПериодРегистрации);
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Движение = Движения.ВКМ_ВзаиморасчетыССотрудниками.ДобавитьПриход();
		Движение.Период = Дата;
		Движение.Сотрудник = Выборка.Сотрудник;
		Движение.Сумма = Выборка.Сумма;
	КонецЦикла;

КонецПроцедуры

